{"version":3,"sources":["extensions/CanvasExt.js","simulations/RenderLoop.js","extensions/VectorExt.js","simulations/BirdSim/Bird.js","simulations/SpatialHash.js","simulations/BirdSim/BirdSim.js","components/LabelSlider.js","components/LabelSwitch.js","components/CircleGravityControls.js","components/BoxGravityControls.js","components/FovDisplay.js","components/FlockSimulation.js","components/Footer.js","App.js","index.js"],"names":["CanvasRenderingContext2D","prototype","line","x1","y1","x2","y2","this","beginPath","moveTo","lineTo","stroke","startRender","canvas","item","undefined","getContext","vendors","x","length","window","requestAnimationFrame","cancelAnimationFrame","vendorCheck","cx","lastTime","Date","getTime","currentTime","dt","fixedDeltaCounter","fixedCount","simulation","init","simulationLoop","Math","min","fixedUpdate","update","render","Vec2D","rotate","angle","_x","y","_y","cos","sin","rotateTrig","sinAngle","cosAngle","atan2","clampSq","maxLength","maxLengthSq","lengthSq","unit","multiplyByScalar","Bird","Object","classCallCheck","position","random","width","height","velocity","effectMultiplier","flockingMultiplier","cw","ch","space","color","panicTimer","showPanic","arguments","path","i","add","fillStyle","fill","SpatialHash","size","spaces","spaceSize","spaceName","hasOwnProperty","k","klen","__space","newSize","clear","spaceX","spaceY","newSpace","neighbors","name","concat","push","floor","splice","createSpace","includes","items","len","neighbor","BirdSimulation","birds","bird","index","setupBirds","count","speed","maxSpeed","fov","repulseDistance","approachDistance","repulseValue","approachValue","linearRepulse","linearApproach","individualFlocking","setupAttraction","circleMode","circleDiameter1","circleDiameter2","circleValue","boxWidth1","boxWidth2","boxHeight1","boxHeight2","boxValue","setRedBird","setupPredator","radius1","radius2","colorPanic","panicTime","setPredator","setPredatorPosition","setLinearPredator","setPanicReduction","setPanicAmplification","setTriggerVisualizations","centerX","centerY","_ref","setBirdCount","setFlightSpeed","setMaxSpeed","setFov","setRepulseDistance","setApproachDistance","setRepulseValue","setApproachValue","setLinearRepulse","setLinearApproach","setIndividualFlocking","birdCount","previousBirdCount","distance","approachSq","biggerDistance","max","resize","repulseSq","value","flightSpeed","predatorValue","maxSpeedSq","radians","PI","fovTestAngle","fovTestSin","fovTestCos","_ref2","setCircleAttractMode","setCenterAttractDiameter","setCenterAttractFarthestDiameter","setCenterAttractValue","setBoxAttractWidth","setBoxAttractFarthestWidth","setBoxAttractHeight","setBoxAttractFarthestHeight","setBoxAttractValue","circleCenterMode","centerAttractRadius","centerAttractRadiusSq","centerAttractFarthestRadius","centerAttractFarthestRadiusSq","centerAttractValue","boxAttractValue","boxAttractHorizontalDist","boxAttractFarthestHorizontalDist","boxAttractVerticalDist","boxAttractFarthestVerticalDist","predatorPosition","predator","_ref3","predatorFullEffectRadius","predatorFullEffectRadiusSq","predatorMaxRadius","predatorMaxRadiusSq","panicSlowdownTime","linearPredator","panicReduction","panicAmplification","redBird","triggerVisualizations","_this","registerPosition","approacLength","itemsFromAdjacentSpaces","forEach","other","offset","clone","subtract","distanceSq","biggerDistanceSq","dot","t1","t2","panicAmplifier","multiplier","sqrt","reverse","centerOffsetX","centerOffsetY","centerDistanceSq","horizontalDist","verticalDist","absH","abs","absV","sign","predatorOffsetX","predatorOffsetY","predatorDistanceSq","flockBehaviour","_","fillRect","arc","maxHorz","maxVert","lineWidth","velAngle","clearRect","renderCircleAttractMode","renderBoxAttractMode","renderPredator","renderBirdTriggers","draw","birdSim","LabelSlider","label","step","onChange","_ref$suffix","suffix","react_default","a","createElement","style","marginTop","marginLeft","marginRight","marginBottom","index_esm","axis","xstep","xmin","xmax","LabelSwitch","_ref$onLabel","onLabel","_ref$offLabel","offLabel","dist_index_esm","CircleGravityControls","force","changeForce","diameter","changeDiameter","maxDiameter","changeMaxDiameter","components_LabelSlider","toFixed","BoxGravityControls","changeWidth","changeHeight","maxWidth","changeMaxWidth","maxHeight","changeMaxHeight","FovDisplay","canvasElement","useRef","context","useEffect","current","birdAngle","fovRad","margin","border","ref","FlockSimulation","_useState","useState","_useState2","slicedToArray","birdSetup","setBirdSetup","_useState3","_useState4","attractSetup","setAttractSetup","_useState5","_useState6","_useState7","triggers","_useState8","visuals","setVisuals","columnStyle","display","verticalAlign","changeBirdSetup","newSetup","changeAttractSetup","changeVisuals","changePredator","_ref4","console","log","addEventListener","event","rect","getBoundingClientRect","clientX","left","clientY","top","right","bottom","preventDefault","removeEventListener","paddingLeft","paddingRight","_ref5","objectSpread","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref12","components_FovDisplay","components_LabelSwitch","components_CircleGravityControls","_ref13","_ref14","_ref15","components_BoxGravityControls","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","Footer","textAlign","href","App","props","components_FlockSimulation","components_Footer","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f5095719.chunk.js","sourcesContent":["CanvasRenderingContext2D.prototype.line = function (x1, y1, x2, y2) {\n    this.beginPath()\n    this.moveTo(x1, y1)\n    this.lineTo(x2, y2)\n    this.stroke()\n}","const vendorCheck = () => {\n    const vendors = ['webkit', 'moz'];\n    for (let x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\n        window.cancelAnimationFrame =\n            window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\n    }\n}\n\nconst startRender = (canvas, item) => {\n    if (typeof (canvas.getContext) === undefined) {\n        return\n    }\n\n    vendorCheck()\n\n    let cx = canvas.getContext('2d'),\n        lastTime = (new Date()).getTime(),\n        currentTime = 0,\n        dt = 0,\n        fixedDeltaCounter = 0,\n        fixedCount = 0\n    \n    const maxLoops = 1,\n        fixedDelta = 1.0/60\n    \n    canvas.simulation = item\n    item.init(canvas)\n\n    const simulationLoop = () => {\n        window.requestAnimationFrame(simulationLoop)\n\n        currentTime = (new Date()).getTime()\n        dt = Math.min((currentTime - lastTime) / 1000, 0.03)\n\n        fixedDeltaCounter += dt\t\t\n        fixedCount = 0\n\t\t\n\t\tif (fixedDeltaCounter < fixedDelta) {\n\t\t\tfixedDeltaCounter = fixedDelta\n\t\t}\n\t\t\n\t\twhile (fixedDeltaCounter >= fixedDelta && fixedCount < maxLoops) {\n\t\t\titem.fixedUpdate(fixedDelta)\n\t\t\tfixedDeltaCounter -= fixedDelta\n\t\t\tfixedCount++\n\t\t}\n\t\t\n\t\tif (fixedCount >= maxLoops) {\n\t\t\tfixedDeltaCounter = 0\n\t\t}\n\n        item.update(dt)\n\n        item.render(cx)\n\n        lastTime = currentTime\n    }\n\n    simulationLoop()\n}\n\nexport default startRender","import * as Vec2D from 'vector2d'\n\nVec2D.Vector.prototype.rotate = function (angle) {\n    const x = this._x, y = this._y\n    this._x = x * Math.cos(angle) - y * Math.sin(angle)\n    this._y = x * Math.sin(angle) + y * Math.cos(angle)\n    return this\n}\n\nVec2D.Vector.prototype.rotateTrig = function (sinAngle, cosAngle) {\n    const x = this._x, y = this._y\n    this._x = x * cosAngle - y * sinAngle\n    this._y = x * sinAngle + y * cosAngle\n    return this\n}\n\nVec2D.Vector.prototype.angle = function () {\n    return Math.atan2(this._y, this._x)\n}\n\nVec2D.Vector.prototype.clampSq = function (maxLength, maxLengthSq) {\n    if (this.lengthSq() > maxLengthSq) {\n        this.unit().multiplyByScalar(maxLength)\n    }\n    return this\n}\n","import * as Vec2D from 'vector2d'\nimport '../../extensions/VectorExt'\n\nclass Bird {\n\n    constructor(canvas) {\n        this.canvas = canvas\n        this.position = new Vec2D.Vector(Math.random() * canvas.width, Math.random() * canvas.height)\n        this.velocity = new Vec2D.Vector(-5 + Math.random() * 10, -5 + Math.random() * 10)\n        this.effectMultiplier = 0.1 + Math.random() * 0.9\n        this.flockingMultiplier = 0.6 + Math.random() * 0.4\n        this.cw = canvas.width\n        this.ch = canvas.height\n        this.space = ''\n        this.color = '#0000FF'\n        this.panicTimer = 0\n    }\n\n    draw(cx, showPanic = true) {\n        const path = [new Vec2D.Vector(10, 0), new Vec2D.Vector(-5, 5), new Vec2D.Vector(-5, -5)]\n        const angle = this.velocity.angle()\n        const sinAngle = Math.sin(angle)\n        const cosAngle = Math.cos(angle)\n        for (let i = 0; i < path.length; i++) {\n            path[i].rotateTrig(sinAngle, cosAngle).add(this.position)\n        }\n\n        cx.beginPath()\n        cx.fillStyle = showPanic && this.panicTimer > 0 ? '#FFAA00' : this.color\n        cx.moveTo(path[0].x, path[0].y)\n        for (let i = 1; i < path.length; i++) {\n            cx.lineTo(path[i].x, path[i].y)\n        }\n        cx.fill()\n    }\n}\n\nexport default Bird","\nclass SpatialHash {\n\n    constructor(size) {\n        this.spaces = {}\n        this.spaceSize = size\n    }\n\n    clear() {\n        for (let spaceName in this.spaces) {\n            if (this.spaces.hasOwnProperty(spaceName)) {\n                const space = this.spaces[spaceName]\n                for (let k = 0, klen = space.length; k < klen; k++) {\n                    space[k].__space = null\n                }\n                space.length = 0\n            }\n        }\n    }\n\n    resize(newSize) {\n        this.spaceSize = newSize\n        this.clear()\n    }\n\n    createSpace(spaceX, spaceY, spaceName) {\n        const newSpace = []\n        newSpace.neighbors = []\n        this.spaces[spaceName] = newSpace\n        for (let x = spaceX - 1; x <= spaceX + 1; x++) {\n            for (let y = spaceY - 1; y <= spaceY + 1; y++) {\n                const name = `${x},${y}`\n                if (this.spaces.hasOwnProperty(name)) {\n                    const space = this.spaces[name]\n                    space.neighbors.push(newSpace)\n                    if (space !== newSpace) {\n                        newSpace.neighbors.push(space)\n                    }\n                }\n            }\n        }\n    }\n\n    registerPosition(item, position) {\n        const spaceX = Math.floor(position.x / this.spaceSize)\n        const spaceY = Math.floor(position.y / this.spaceSize)\n        const spaceName = `${spaceX},${spaceY}`\n\n        if (item.__space !== spaceName) {\n            if (this.spaces.hasOwnProperty(item.__space)) {\n                const space = this.spaces[item.__space]\n                for (var i = 0; i < space.length; i++) {\n                    if (space[i] === item) {\n                        space.splice(i, 1);\n                        break\n                    }\n                }\n            }\n            item.__space = spaceName\n            if (!this.spaces.hasOwnProperty(spaceName)) {\n                this.createSpace(spaceX, spaceY, spaceName)\n            }\n            if (!this.spaces[spaceName].includes(item)) {\n                this.spaces[spaceName].push(item)\n            }\n        }\n    }\n\n    itemsFromAdjacentSpaces(position) {\n        const spaceX = Math.floor(position.x / this.spaceSize)\n        const spaceY = Math.floor(position.y / this.spaceSize)\n        const spaceName = `${spaceX},${spaceY}`\n\n        if (!this.spaces.hasOwnProperty(spaceName)) {\n            return []\n        }\n\n        const space = this.spaces[spaceName]\n        const items = []\n\n        for (let i = 0, len = space.neighbors.length; i < len; i++) {\n            const neighbor = space.neighbors[i]\n            for (let k = 0, klen = neighbor.length; k < klen; k++) {\n                items.push(neighbor[k])\n            }\n        }\n\n        return items\n    }\n}\n\nexport default SpatialHash","import * as Vec2D from 'vector2d'\nimport '../../extensions/CanvasExt'\nimport Bird from './Bird'\nimport SpatialHash from '../SpatialHash'\n\nclass BirdSimulation {\n\n    init(canvas) {\n        this.canvas = canvas\n        this.width = canvas.width\n        this.height = canvas.height\n\n        this.birds = []\n        for (let i = 0; i < 2500; i++) {\n            const bird = new Bird(canvas)\n            bird.index = i\n            this.birds.push(bird)\n        }\n\n        this.spaces = new SpatialHash(10)\n\n        this.setupBirds({\n            count: 100, speed: 50, maxSpeed: 100, fov: 270,\n            repulseDistance: 15, approachDistance: 30, repulseValue: 3,\n            approachValue: 0.5, linearRepulse: false, linearApproach: false,\n            individualFlocking: false\n        })\n\n        this.setupAttraction({\n            circleMode: true, circleDiameter1: 200, circleDiameter2: 400, circleValue: 1,\n            boxWidth1: 500, boxWidth2: 700, boxHeight1: 50, boxHeight2: 100, boxValue: 1\n        })\n\n        this.setRedBird(true)\n\n        this.setupPredator({\n            radius1: 30, radius2: 150, colorPanic: false, panicTime: 4\n        })\n        this.setPredator(false)\n        this.setPredatorPosition(0, 0)\n        this.setLinearPredator(true)\n        this.setPanicReduction(0.2)\n        this.setPanicAmplification(10)\n\n        this.setTriggerVisualizations(false)\n\n        this.centerX = canvas.width * 0.5\n        this.centerY = canvas.height * 0.5\n    }\n\n    setupBirds({ count, speed, maxSpeed, fov, repulseDistance, approachDistance,\n        repulseValue, approachValue, linearRepulse, linearApproach, individualFlocking }) {\n\n        this.setBirdCount(count)\n        this.setFlightSpeed(speed)\n        this.setMaxSpeed(maxSpeed)\n        this.setFov(fov)\n        this.setRepulseDistance(repulseDistance)\n        this.setApproachDistance(approachDistance)\n        this.setRepulseValue(repulseValue)\n        this.setApproachValue(approachValue)\n        this.setLinearRepulse(linearRepulse)\n        this.setLinearApproach(linearApproach)\n        this.setIndividualFlocking(individualFlocking)\n    }\n\n    setBirdCount(count) {\n        this.birdCount = count\n        if (this.birdCount === this.previousBirdCount) {\n            return\n        }\n        if (this.birdCount < this.previousBirdCount) {\n            this.spaces.clear()\n        }\n        this.previousBirdCount = this.birdCount\n    }\n\n    setApproachDistance(distance) {\n        this.approachDistance = distance\n        this.approachSq = this.approachDistance * this.approachDistance\n        let biggerDistance = Math.max(this.approachDistance, this.repulseDistance)\n        if (this.spaces.spaceSize !== biggerDistance) {\n            this.spaces.resize(biggerDistance)\n        }\n    }\n\n    setRepulseDistance(distance) {\n        this.repulseDistance = distance\n        this.repulseSq = this.repulseDistance * this.repulseDistance\n        let biggerDistance = Math.max(this.approachDistance, this.repulseDistance)\n        if (this.spaces.spaceSize !== biggerDistance) {\n            this.spaces.resize(biggerDistance)\n        }\n    }\n\n    setFlightSpeed(value) {\n        this.flightSpeed = value\n        this.predatorValue = value * 2.5\n    }\n\n    setMaxSpeed(value) {\n        this.maxSpeed = value\n        this.maxSpeedSq = this.maxSpeed * this.maxSpeed\n    }\n\n    setApproachValue(value) {\n        this.approachValue = value\n    }\n\n    setRepulseValue(value) {\n        this.repulseValue = value\n    }\n\n    setLinearApproach(value) {\n        this.linearApproach = value\n    }\n\n    setLinearRepulse(value) {\n        this.linearRepulse = value\n    }\n\n    setFov(value) {\n        this.fov = value\n        const radians = value * Math.PI / 180\n        if (this.fov === 180) {\n            this.fovTestAngle = 0\n        } else {\n            this.fovTestAngle = (radians - Math.PI) / 2\n        }\n        this.fovTestSin = Math.sin(this.fovTestAngle)\n        this.fovTestCos = Math.cos(this.fovTestAngle)\n    }\n\n    setupAttraction({ circleMode, circleDiameter1, circleDiameter2,\n        circleValue, boxWidth1, boxWidth2, boxHeight1, boxHeight2, boxValue }) {\n        this.setCircleAttractMode(circleMode)\n        this.setCenterAttractDiameter(circleDiameter1)\n        this.setCenterAttractFarthestDiameter(circleDiameter2)\n        this.setCenterAttractValue(circleValue)\n        this.setBoxAttractWidth(boxWidth1)\n        this.setBoxAttractFarthestWidth(boxWidth2)\n        this.setBoxAttractHeight(boxHeight1)\n        this.setBoxAttractFarthestHeight(boxHeight2)\n        this.setBoxAttractValue(boxValue)\n    }\n\n    setCircleAttractMode(value) {\n        this.circleCenterMode = value\n    }\n\n    setCenterAttractDiameter(value) {\n        this.centerAttractRadius = value * 0.5\n        this.centerAttractRadiusSq = this.centerAttractRadius * this.centerAttractRadius\n    }\n\n    setCenterAttractFarthestDiameter(value) {\n        this.centerAttractFarthestRadius = value * 0.5\n        this.centerAttractFarthestRadiusSq = this.centerAttractFarthestRadius * this.centerAttractFarthestRadius\n    }\n\n    setCenterAttractValue(value) {\n        this.centerAttractValue = value\n    }\n\n    setBoxAttractValue(value) {\n        this.boxAttractValue = value\n    }\n\n    setBoxAttractWidth(value) {\n        this.boxAttractHorizontalDist = value * 0.5\n    }\n\n    setBoxAttractFarthestWidth(value) {\n        this.boxAttractFarthestHorizontalDist = value * 0.5\n    }\n\n    setBoxAttractHeight(value) {\n        this.boxAttractVerticalDist = value * 0.5\n    }\n\n    setBoxAttractFarthestHeight(value) {\n        this.boxAttractFarthestVerticalDist = value * 0.5\n    }\n\n    setPredatorPosition(x, y) {\n        this.predatorPosition = new Vec2D.Vector(x, y)\n    }\n\n    setPredator(value) {\n        this.predator = value\n    }\n\n    setupPredator({ radius1, radius2, colorPanic, panicTime }) {\n        this.predatorFullEffectRadius = radius1\n        this.predatorFullEffectRadiusSq = radius1 * radius1\n\n        this.predatorMaxRadius = radius2\n        this.predatorMaxRadiusSq = radius2 * radius2\n\n        this.panicTime = panicTime\n        this.panicSlowdownTime = panicTime * 0.25\n        this.colorPanic = colorPanic\n    }\n\n    setPredatorValue(value) {\n        this.predatorValue = value\n    }\n\n    setLinearPredator(value) {\n        this.linearPredator = value\n    }\n\n    setPanicReduction(value) {\n        this.panicReduction = value\n    }\n\n    setPanicAmplification(value) {\n        this.panicAmplification = value\n    }\n\n    setRedBird(value) {\n        this.redBird = value\n        this.birds[0].color = this.redBird ? '#FF0000' : '#0000FF'\n    }\n\n    setTriggerVisualizations(value) {\n        this.triggerVisualizations = value\n    }\n\n    setIndividualFlocking(value) {\n        this.individualFlocking = value\n    }\n\n    flockBehaviour(bird, dt) {\n        let speed = this.flightSpeed\n        if (bird.panicTimer > 0) {\n            if (bird.panicTimer > this.panicSlowdownTime) {\n                speed *= 1.5\n            } else {\n                speed *= 1 + 0.5 * (bird.panicTimer / this.panicSlowdownTime)\n            }\n            bird.panicTimer -= dt\n        }\n\n        bird.velocity.unit().multiplyByScalar(speed)\n\n        this.spaces.registerPosition(bird, bird.position)\n\n        const approacLength = this.approachDistance - this.repulseDistance\n\n        const handleOther = (other) => {\n            let offset = other.position.clone().subtract(bird.position)\n            const distanceSq = offset.lengthSq()\n            const biggerDistanceSq = Math.max(this.approachSq, this.repulseSq)\n            const flockingMultiplier = this.individualFlocking ? bird.flockingMultiplier : 1\n            if (bird === other\n                || distanceSq > biggerDistanceSq) {\n                return\n            }\n            if (this.fov < 360) {\n                if (this.fov === 180 && bird.velocity.dot(offset) < 0) {\n                    return\n                } else if (this.fov !== 180) {\n                    const t1 = offset.clone().rotateTrig(this.fovTestSin, this.fovTestCos)\n                    const t2 = offset.clone().rotateTrig(-this.fovTestSin, this.fovTestCos)\n                    if ((this.fov < 180 && (bird.velocity.dot(t1) < 0 || bird.velocity.dot(t2) < 0))\n                        || (this.fov > 180 && bird.velocity.dot(t1) < 0 && bird.velocity.dot(t2) < 0)) {\n                        return\n                    }\n                }\n            }\n            if (other.panicTimer > bird.panicTimer + this.panicTime * 0.5) {\n                bird.panicTimer = other.panicTimer - this.panicReduction\n            }\n            const panicAmplifier = other.panicTimer > 0 && other.panicTimer > bird.panicTimer ? this.panicAmplification : bird.panicTimer > 0 ? 0.1 : 1\n            if (distanceSq < this.repulseSq && other.panicTimer <= 0) {\n                if (this.linearRepulse) {\n                    const multiplier = (this.repulseDistance - Math.sqrt(distanceSq)) / this.repulseDistance\n                    offset.reverse().unit().multiplyByScalar(this.repulseValue * multiplier * flockingMultiplier)\n                } else {\n                    offset.reverse().unit().multiplyByScalar(this.repulseValue * flockingMultiplier)\n                }\n            } else {\n                if (this.linearApproach) {\n                    const multiplier = (approacLength - (Math.sqrt(distanceSq) - this.repulseDistance)) / (this.approachDistance - this.repulseDistance)\n                    offset = other.velocity.clone().unit().multiplyByScalar(this.approachValue * multiplier * flockingMultiplier * panicAmplifier)\n                } else {\n                    offset = other.velocity.clone().unit().multiplyByScalar(this.approachValue * flockingMultiplier * panicAmplifier)\n                }\n            }\n            bird.velocity.add(offset)\n        }\n\n        if (this.fov > 0) {\n            this.spaces.itemsFromAdjacentSpaces(bird.position).forEach(handleOther)\n        }\n\n        if (this.circleCenterMode) {\n            const centerOffsetX = this.centerX - bird.position.x\n            const centerOffsetY = this.centerY - bird.position.y\n            const centerDistanceSq = centerOffsetX * centerOffsetX + centerOffsetY * centerOffsetY\n\n            if (centerDistanceSq > this.centerAttractRadiusSq) {\n                if (centerDistanceSq < this.centerAttractFarthestRadiusSq) {\n                    const multiplier = (Math.sqrt(centerDistanceSq) - this.centerAttractRadius) / (this.centerAttractFarthestRadius - this.centerAttractRadius)\n                    bird.velocity.add(new Vec2D.Vector(centerOffsetX, centerOffsetY).unit().multiplyByScalar(this.centerAttractValue * multiplier * bird.effectMultiplier))\n                } else {\n                    bird.velocity.add(new Vec2D.Vector(centerOffsetX, centerOffsetY).unit().multiplyByScalar(this.centerAttractValue * bird.effectMultiplier))\n                }\n            }\n        } else {\n            const horizontalDist = this.centerX - bird.position.x\n            const verticalDist = this.centerY - bird.position.y\n            const absH = Math.abs(horizontalDist)\n            const absV = Math.abs(verticalDist)\n\n            if (absH > this.boxAttractHorizontalDist) {\n                if (absH < this.boxAttractFarthestHorizontalDist) {\n                    const multiplier = (absH - this.boxAttractHorizontalDist) / (this.boxAttractFarthestHorizontalDist - this.boxAttractHorizontalDist)\n                    bird.velocity.add(new Vec2D.Vector(Math.sign(horizontalDist), 0).multiplyByScalar(this.boxAttractValue * multiplier * bird.effectMultiplier))\n                } else {\n                    bird.velocity.add(new Vec2D.Vector(Math.sign(horizontalDist), 0).multiplyByScalar(this.boxAttractValue * bird.effectMultiplier))\n                }\n            }\n            if (absV > this.boxAttractVerticalDist) {\n                if (absV < this.boxAttractFarthestVerticalDist) {\n                    const multiplier = (absV - this.boxAttractVerticalDist) / (this.boxAttractFarthestVerticalDist - this.boxAttractVerticalDist)\n                    bird.velocity.add(new Vec2D.Vector(0, Math.sign(verticalDist)).multiplyByScalar(this.boxAttractValue * multiplier * bird.effectMultiplier))\n                } else {\n                    bird.velocity.add(new Vec2D.Vector(0, Math.sign(verticalDist)).multiplyByScalar(this.boxAttractValue * bird.effectMultiplier))\n                }\n            }\n        }\n\n        if (this.predator) {\n            const predatorOffsetX = bird.position.x - this.predatorPosition.x\n            const predatorOffsetY = bird.position.y - this.predatorPosition.y\n            const predatorDistanceSq = predatorOffsetX * predatorOffsetX + predatorOffsetY * predatorOffsetY\n\n            if (predatorDistanceSq < this.predatorMaxRadiusSq) {\n                if (predatorDistanceSq < this.predatorFullEffectRadiusSq) {\n                    bird.velocity.add(new Vec2D.Vector(predatorOffsetX, predatorOffsetY).unit().multiplyByScalar(this.predatorValue * bird.effectMultiplier))\n                } else {\n                    const multiplier = 1 - (Math.sqrt(predatorDistanceSq) - this.predatorFullEffectRadius) / (this.predatorMaxRadius - this.predatorFullEffectRadius)\n                    bird.velocity.add(new Vec2D.Vector(predatorOffsetX, predatorOffsetY).unit().multiplyByScalar(this.predatorValue * multiplier * bird.effectMultiplier))\n                }\n                bird.panicTimer = this.panicTime\n            }\n        }\n\n        bird.velocity.clampSq(this.maxSpeed, this.maxSpeedSq)\n        bird.position.add(bird.velocity.multiplyByScalar(dt))\n    }\n\n    fixedUpdate(dt) {\n        for (let i = 0; i < this.birdCount; i++) {\n            const bird = this.birds[i]\n            this.flockBehaviour(bird, dt)\n        }\n    }\n\n    update(_) {\n\n    }\n\n    renderCircleAttractMode(cx) {\n        cx.fillStyle = '#DDDDDD'\n        cx.fillRect(0, 0, this.width, this.height)\n        cx.beginPath()\n        cx.fillStyle = '#EEEEEE'\n        cx.arc(this.centerX, this.centerY, this.centerAttractFarthestRadius, 0, Math.PI * 2)\n        cx.fill()\n        cx.beginPath()\n        cx.fillStyle = '#FFFFFF'\n        cx.arc(this.centerX, this.centerY, this.centerAttractRadius, 0, Math.PI * 2)\n        cx.fill()\n    }\n\n    renderBoxAttractMode(cx) {\n        cx.fillStyle = '#DDDDDD'\n        cx.fillRect(0, 0, this.width, this.height)\n        cx.fillStyle = '#EEEEEE'\n        const maxHorz = Math.max(this.boxAttractFarthestHorizontalDist, this.boxAttractHorizontalDist)\n        const maxVert = Math.max(this.boxAttractFarthestVerticalDist, this.boxAttractVerticalDist)\n        cx.fillRect(this.centerX - maxHorz, this.centerY - maxVert, maxHorz * 2, maxVert * 2)\n        cx.fillStyle = '#FFFFFF'\n        cx.fillRect(this.centerX - this.boxAttractHorizontalDist, this.centerY - this.boxAttractVerticalDist, this.boxAttractHorizontalDist * 2, this.boxAttractVerticalDist * 2)\n        cx.lineWidth = 0.2\n        cx.line(this.centerX - maxHorz, 0, this.centerX - maxHorz, this.height)\n        cx.line(this.centerX + maxHorz, 0, this.centerX + maxHorz, this.height)\n        cx.line(0, this.centerY - maxVert, this.width, this.centerY - maxVert)\n        cx.line(0, this.centerY + maxVert, this.width, this.centerY + maxVert)\n        cx.line(this.centerX - this.boxAttractHorizontalDist, 0, this.centerX - this.boxAttractHorizontalDist, this.height)\n        cx.line(this.centerX + this.boxAttractHorizontalDist, 0, this.centerX + this.boxAttractHorizontalDist, this.height)\n        cx.line(0, this.centerY - this.boxAttractVerticalDist, this.width, this.centerY - this.boxAttractVerticalDist)\n        cx.line(0, this.centerY + this.boxAttractVerticalDist, this.width, this.centerY + this.boxAttractVerticalDist)\n    }\n\n    renderPredator(cx) {\n        cx.fillStyle = '#D5AAAAAA'\n        cx.beginPath()\n        cx.arc(this.predatorPosition.x, this.predatorPosition.y, this.predatorMaxRadius, 0, Math.PI * 2)\n        cx.fill()\n        cx.fillStyle = '#DD8888AA'\n        cx.beginPath()\n        cx.arc(this.predatorPosition.x, this.predatorPosition.y, this.predatorFullEffectRadius, 0, Math.PI * 2)\n        cx.fill()\n    }\n\n    renderBirdTriggers(cx, bird) {\n        const velAngle = bird.velocity.angle()\n        const fov = this.fov / 180 * Math.PI\n        if (this.repulseDistance < this.approachDistance) {\n            cx.fillStyle = '#88CC8888'\n            cx.beginPath()\n            cx.moveTo(bird.position.x, bird.position.y)\n            cx.arc(bird.position.x, bird.position.y, this.approachDistance, velAngle - fov / 2, velAngle + fov / 2)\n            cx.fill()\n        }\n        cx.fillStyle = '#CC888888'\n        cx.beginPath()\n        cx.moveTo(bird.position.x, bird.position.y)\n        cx.arc(bird.position.x, bird.position.y, this.repulseDistance, velAngle - fov / 2, velAngle + fov / 2)\n        cx.fill()\n    }\n\n    render(cx) {\n        cx.clearRect(0, 0, this.width, this.height)\n\n        if (this.triggerVisualizations) {\n            if (this.circleCenterMode) {\n                this.renderCircleAttractMode(cx)\n            } else {\n                this.renderBoxAttractMode(cx)\n            }\n            if (this.predator) {\n                this.renderPredator(cx)\n            }\n        }\n\n        if (this.triggerVisualizations && this.redBird) {\n            this.renderBirdTriggers(cx, this.birds[0])\n        }\n\n        for (let i = this.birdCount - 1; i >= 0; i--) {\n            const bird = this.birds[i]\n            bird.draw(cx, this.colorPanic)\n        }\n    }\n}\n\nconst birdSim = () => {\n    return new BirdSimulation()\n}\n\nexport default birdSim\n","import React from 'react'\nimport Slider from 'react-input-slider'\n\nconst LabelSlider = ({ label, value, step, min, max, onChange, suffix='' }) => {\n    const divStyle = {\n        marginTop: '5px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        marginBottom: '5px'\n    }\n    return <div style={divStyle}>\n        <div>\n            {`${label}: ${value}${suffix}`}\n        </div>\n        <Slider\n            axis=\"x\"\n            xstep={step}\n            xmin={min}\n            xmax={max}\n            x={value}\n            onChange={onChange()}\n        />\n    </div>\n}\n\nexport default LabelSlider","import React from 'react'\nimport Switch from 'react-input-switch'\n\nconst LabelSwitch = ({ label, value, onChange, onLabel = 'On', offLabel = 'Off' }) => {\n    const divStyle = {\n        marginTop: '5px',\n        marginLeft: '5px',\n        marginRight: '5px',\n        marginBottom: '5px'\n    }\n    const switchStyle = {\n        marginRight: '10px'\n    }\n    return <div style={divStyle}>\n        <Switch style={switchStyle}\n            value={value}\n            onChange={onChange()}\n        />\n        {`${label}: ${value ? onLabel : offLabel}`}\n    </div>\n}\n\nexport default LabelSwitch","import React from 'react'\nimport LabelSlider from './LabelSlider';\n\nconst CircleGravityControls = ({ force, changeForce,\n    diameter, changeDiameter,\n    maxDiameter, changeMaxDiameter }) =>\n    <div>\n        <LabelSlider\n            label='Min Diameter' value={diameter}\n            min={0} max={2000} step={10}\n            onChange={changeDiameter}\n        />\n        <LabelSlider\n            label='Max Diameter' value={maxDiameter}\n            min={0} max={2000} step={10}\n            onChange={changeMaxDiameter}\n        />\n        <LabelSlider\n            label='Attract force' value={force.toFixed(1)}\n            min={0} max={10} step={0.1}\n            onChange={changeForce}\n        />\n    </div>\n\nexport default CircleGravityControls","import React from 'react'\nimport LabelSlider from './LabelSlider';\n\nconst BoxGravityControls = ({ force, changeForce,\n    width, changeWidth,\n    height, changeHeight,\n    maxWidth, changeMaxWidth,\n    maxHeight, changeMaxHeight }) =>\n    <div>\n        <LabelSlider\n            label='Min Width' value={width}\n            min={0} max={2000} step={10}\n            onChange={changeWidth}\n        />\n        <LabelSlider\n            label='Min Height' value={height}\n            min={0} max={2000} step={10}\n            onChange={changeHeight}\n        />\n        <LabelSlider\n            label='Max Width' value={maxWidth}\n            min={0} max={2000} step={10}\n            onChange={changeMaxWidth}\n        />\n        <LabelSlider\n            label='Max Height' value={maxHeight}\n            min={0} max={2000} step={10}\n            onChange={changeMaxHeight}\n        />\n        <LabelSlider\n            label='Attract force' value={force.toFixed(1)}\n            min={0} max={10} step={0.1}\n            onChange={changeForce}\n        />\n    </div>\n\nexport default BoxGravityControls","import React, { useEffect, useRef } from 'react'\nimport * as Vec2D from 'vector2d'\nimport '../extensions/VectorExt'\n\nconst FovDisplay = ({ fov, approachDistance, repulseDistance }) => {\n    const canvasElement = useRef(null)\n    const canvasStyle = {\n        border: ' 1px solid #aaa',\n    }\n    const divStyle = {\n        margin: '5px'\n    }\n\n    let context = null\n\n    const renderHook = () => {\n        const canvas = canvasElement.current\n        if (context === null) {\n            context = canvas.getContext('2d')\n        }\n        context.clearRect(0, 0, canvas.width, canvas.height)\n\n        const centerX = canvas.width * 0.5\n        const centerY = canvas.height * 0.5\n        const birdAngle = Math.PI * -0.5\n        const fovRad = fov / 180 * Math.PI\n        if (repulseDistance < approachDistance) {\n            context.fillStyle = '#88CC8888'\n            context.beginPath()\n            context.moveTo(centerX, centerY)\n            context.arc(centerX, centerY, approachDistance, birdAngle - fovRad / 2, birdAngle + fovRad / 2)\n            context.fill()\n        }\n        context.fillStyle = '#CC888888'\n        context.beginPath()\n        context.moveTo(centerX, centerY)\n        context.arc(centerX, centerY, repulseDistance, birdAngle - fovRad / 2, birdAngle + fovRad / 2)\n        context.fill()\n\n        const path = [new Vec2D.Vector(10, 0), new Vec2D.Vector(-5, 5), new Vec2D.Vector(-5, -5)]\n        const sinAngle = Math.sin(birdAngle)\n        const cosAngle = Math.cos(birdAngle)\n        for (let i = 0; i < path.length; i++) {\n            path[i].rotateTrig(sinAngle, cosAngle).add(new Vec2D.Vector(centerX, centerY))\n        }\n\n        context.beginPath()\n        context.fillStyle = '#FF0000'\n        context.moveTo(path[0].x, path[0].y)\n        for (let i = 1; i < path.length; i++) {\n            context.lineTo(path[i].x, path[i].y)\n        }\n        context.fill()\n    }\n\n    useEffect(renderHook)\n\n    return <div style={divStyle}>\n        <canvas style={canvasStyle} ref={canvasElement} width=\"200\" height=\"200\" />\n    </div>\n}\n\nexport default FovDisplay","import React, { useState, useEffect, useRef } from 'react'\nimport startRender from '../simulations/RenderLoop'\nimport birdSim from '../simulations/BirdSim/BirdSim'\nimport LabelSlider from './LabelSlider';\nimport LabelSwitch from './LabelSwitch';\nimport CircleGravityControls from './CircleGravityControls'\nimport BoxGravityControls from './BoxGravityControls'\nimport FovDisplay from './FovDisplay'\n\nconst FlockSimulation = () => {\n    const [birdSetup, setBirdSetup] = useState({\n        count: 1500,\n        speed: 50,\n        maxSpeed: 120,\n        fov: 200,\n        repulseDistance: 30,\n        approachDistance: 60,\n        repulseValue: 3,\n        approachValue: 0.5,\n        linearRepulse: 1,\n        linearApproach: 0,\n        individualFlocking: 0\n    })\n    const [attractSetup, setAttractSetup] = useState({\n        circleMode: 0,\n        circleDiameter1: 200,\n        circleDiameter2: 400,\n        circleValue: 1,\n        boxWidth1: 500,\n        boxWidth2: 700,\n        boxHeight1: 50,\n        boxHeight2: 100,\n        boxValue: 1\n    })\n    const [predator, setPredator] = useState({\n        radius1: 110,\n        radius2: 150,\n        colorPanic: 0,\n        panicTime: 4\n    })\n    const [visuals, setVisuals] = useState({\n        triggers: 0,\n        redBird: 1\n    })\n\n    const canvasElement = useRef(null)\n\n    const canvasStyle = {\n        border: ' 1px solid #aaa',\n    }\n    const controlAreaStyle = {\n        paddingLeft: '25px',\n        paddingRight: '25px',\n    }\n    const columnStyle = {\n        display: 'inline-block',\n        verticalAlign: 'top',\n        width: '200px',\n        marginLeft: '5px',\n        marginRight: '5px'\n    }\n    const titleStyle = {\n        margin: '5px'\n    }\n\n    const startHook = () => {\n        console.log('start hook')\n\n        startRender(canvasElement.current, birdSim())\n\n        canvasElement.current.simulation.setupBirds(birdSetup)\n        canvasElement.current.simulation.setupAttraction(attractSetup)\n        canvasElement.current.simulation.setupPredator(predator)\n        canvasElement.current.simulation.setRedBird(visuals.redBird)\n        canvasElement.current.simulation.setTriggerVisualizations(visuals.triggers)\n\n        const mousedown = event => {\n            const rect = canvasElement.current.getBoundingClientRect()\n            if (event.clientX < rect.left || event.clientY < rect.top\n                || event.clientX > rect.right || event.clientY > rect.bottom) {\n                return\n            }\n            event.preventDefault()\n            canvasElement.current.simulation.setPredator(true)\n        }\n        const mouseup = event => {\n            const rect = canvasElement.current.getBoundingClientRect()\n            if (event.clientX < rect.left || event.clientY < rect.top\n                || event.clientX > rect.right || event.clientY > rect.bottom) {\n                return\n            }\n            canvasElement.current.simulation.setPredator(false)\n        }\n        const mousemove = event => {\n            const rect = canvasElement.current.getBoundingClientRect()\n            if (event.clientX < rect.left || event.clientY < rect.top\n                || event.clientX > rect.right || event.clientY > rect.bottom) {\n                canvasElement.current.simulation.setPredator(false)\n                return\n            }\n            event.preventDefault()\n            const x = (event.clientX - rect.left) / (rect.right - rect.left) * canvasElement.current.width\n            const y = (event.clientY - rect.top) / (rect.bottom - rect.top) * canvasElement.current.height\n            canvasElement.current.simulation.setPredatorPosition(x, y)\n        }\n\n        window.addEventListener(\"mousedown\", mousedown)\n        window.addEventListener(\"mouseup\", mouseup)\n        window.addEventListener(\"mousemove\", mousemove)\n        \n        return () => {\n            window.removeEventListener(\"mousemove\")\n            window.removeEventListener(\"mouseup\")\n            window.removeEventListener(\"mousedown\")\n        }\n    }\n\n    const changeBirdSetup = ({ count, speed, maxSpeed, fov, repulseDistance,\n        approachDistance, repulseValue, approachValue, linearRepulse, linearApproach,\n        individualFlocking }) => {\n\n        const newSpeed = speed > maxSpeed && speed === birdSetup.speed ? maxSpeed : speed\n        const newMaxSpeed = speed > maxSpeed && maxSpeed === birdSetup.maxSpeed ? speed : maxSpeed\n\n        const newSetup = {\n            count: count,\n            speed: newSpeed,\n            maxSpeed: newMaxSpeed,\n            fov: fov,\n            repulseDistance: repulseDistance,\n            approachDistance: approachDistance,\n            repulseValue: repulseValue,\n            approachValue: approachValue,\n            linearRepulse: linearRepulse,\n            linearApproach: linearApproach,\n            individualFlocking: individualFlocking\n        }\n        setBirdSetup(newSetup)\n        canvasElement.current.simulation.setupBirds(newSetup)\n    }\n\n    const changeAttractSetup = ({ circleMode, circleDiameter1, circleDiameter2,\n        circleValue, boxWidth1, boxWidth2, boxHeight1, boxHeight2, boxValue\n    }) => {\n\n        const newDiameter1 = circleDiameter1 > circleDiameter2 && attractSetup.circleDiameter1 === circleDiameter1 ? circleDiameter2 : circleDiameter1\n        const newDiameter2 = circleDiameter1 > circleDiameter2 && attractSetup.circleDiameter2 === circleDiameter2 ? circleDiameter1 : circleDiameter2\n        const newWidth1 = boxWidth1 > boxWidth2 && attractSetup.boxWidth1 === boxWidth1 ? boxWidth2 : boxWidth1\n        const newWidth2 = boxWidth1 > boxWidth2 && attractSetup.boxWidth2 === boxWidth2 ? boxWidth1 : boxWidth2\n        const newHeight1 = boxHeight1 > boxHeight2 && attractSetup.boxHeight1 === boxHeight1 ? boxHeight2 : boxHeight1\n        const newHeight2 = boxHeight1 > boxHeight2 && attractSetup.boxHeight2 === boxHeight2 ? boxHeight1 : boxHeight2\n\n        const newSetup = {\n            circleMode: circleMode,\n            circleDiameter1: newDiameter1,\n            circleDiameter2: newDiameter2,\n            circleValue: circleValue,\n            boxWidth1: newWidth1,\n            boxWidth2: newWidth2,\n            boxHeight1: newHeight1,\n            boxHeight2: newHeight2,\n            boxValue: boxValue\n        }\n        setAttractSetup(newSetup)\n        canvasElement.current.simulation.setupAttraction(newSetup)\n    }\n\n    const changeVisuals = ({ triggers, redBird }) => {\n        setVisuals({\n            triggers: triggers,\n            redBird: redBird\n        })\n        canvasElement.current.simulation.setRedBird(redBird)\n        canvasElement.current.simulation.setTriggerVisualizations(triggers)\n    }\n\n    const changePredator = ({ radius1, radius2, colorPanic, panicTime }) => {\n        const newRadius1 = radius1 > radius2 && radius1 === predator.radius1 ? radius2 : radius1\n        const newRadius2 = radius1 > radius2 && radius2 === predator.radius2 ? radius1 : radius2\n        const newSetup = {\n            radius1: newRadius1,\n            radius2: newRadius2,\n            colorPanic: colorPanic,\n            panicTime: panicTime\n        }\n        setPredator(newSetup)\n        canvasElement.current.simulation.setupPredator(newSetup)\n    }\n\n    useEffect(startHook, [])\n\n    return <div>\n        <canvas style={canvasStyle} ref={canvasElement} width=\"900\" height=\"600\" />\n        <div style={controlAreaStyle}>\n            <div style={columnStyle}>\n                <LabelSlider\n                    label='Birds' value={birdSetup.count}\n                    min={10} max={2500} step={10}\n                    onChange={() => ({ x }) => changeBirdSetup({ ...birdSetup, count: x })}\n                />\n                <LabelSlider\n                    label='Bird speed' value={birdSetup.speed}\n                    min={0} max={200} step={1}\n                    onChange={() => ({ x }) => changeBirdSetup({ ...birdSetup, speed: x })}\n                />\n                <LabelSlider\n                    label='Max speed' value={birdSetup.maxSpeed}\n                    min={0} max={200} step={1}\n                    onChange={() => ({ x }) => changeBirdSetup({ ...birdSetup, maxSpeed: x })}\n                />\n                <LabelSlider\n                    label='FOV' value={birdSetup.fov} suffix=\"°\"\n                    min={0} max={360} step={1}\n                    onChange={() => ({ x }) => changeBirdSetup({ ...birdSetup, fov: x })}\n                />\n            </div>\n            <div style={columnStyle}>\n                <LabelSlider\n                    label='Approach distance' value={birdSetup.approachDistance}\n                    min={0} max={200} step={1}\n                    onChange={() => ({ x }) => changeBirdSetup({ ...birdSetup, approachDistance: x })}\n                />\n                <LabelSlider\n                    label='Approach value' value={birdSetup.approachValue.toFixed(1)}\n                    min={0} max={10} step={0.1}\n                    onChange={() => ({ x }) => changeBirdSetup({ ...birdSetup, approachValue: x })}\n                />\n                <LabelSlider\n                    label='Repulse distance' value={birdSetup.repulseDistance}\n                    min={0} max={200} step={1}\n                    onChange={() => ({ x }) => changeBirdSetup({ ...birdSetup, repulseDistance: x })}\n                />\n                <LabelSlider\n                    label='Repulse value' value={birdSetup.repulseValue.toFixed(1)}\n                    min={0} max={10} step={0.1}\n                    onChange={() => ({ x }) => changeBirdSetup({ ...birdSetup, repulseValue: x })}\n                />\n            </div>\n            <div style={columnStyle}>\n                <FovDisplay\n                    fov={birdSetup.fov}\n                    approachDistance={birdSetup.approachDistance}\n                    repulseDistance={birdSetup.repulseDistance}\n                />\n            </div>\n            <div style={columnStyle}>\n                <LabelSwitch\n                    label='Linear approach' value={birdSetup.linearApproach}\n                    onChange={() => x => changeBirdSetup({ ...birdSetup, linearApproach: x })}\n                />\n                <LabelSwitch\n                    label='Linear repulse' value={birdSetup.linearRepulse}\n                    onChange={() => x => changeBirdSetup({ ...birdSetup, linearRepulse: x })}\n                />\n                <LabelSwitch\n                    label='Flocking variance' value={birdSetup.individualFlocking}\n                    onChange={() => x => changeBirdSetup({ ...birdSetup, individualFlocking: x })}\n                />\n                <LabelSwitch\n                    label='Red bird' value={visuals.redBird}\n                    onChange={() => x => changeVisuals({ ...visuals, redBird: x })}\n                />\n                <LabelSwitch\n                    label='Show triggers' value={visuals.triggers}\n                    onChange={() => x => changeVisuals({ ...visuals, triggers: x })}\n                />\n            </div>\n            <div style={columnStyle}>\n                <LabelSwitch\n                    label='Attract mode' value={attractSetup.circleMode}\n                    onLabel='Circle' offLabel='Box'\n                    onChange={() => x => changeAttractSetup({ ...attractSetup, circleMode: x })}\n                />\n                {attractSetup.circleMode ?\n                    <CircleGravityControls diameter={attractSetup.circleDiameter1}\n                        changeDiameter={() => ({ x }) => changeAttractSetup({ ...attractSetup, circleDiameter1: x })}\n                        maxDiameter={attractSetup.circleDiameter2}\n                        changeMaxDiameter={() => ({ x }) => changeAttractSetup({ ...attractSetup, circleDiameter2: x })}\n                        force={attractSetup.circleValue}\n                        changeForce={() => ({ x }) => changeAttractSetup({ ...attractSetup, circleValue: x })} /> :\n                    <BoxGravityControls force={attractSetup.boxValue}\n                        changeForce={() => ({ x }) => changeAttractSetup({ ...attractSetup, boxValue: x })}\n                        width={attractSetup.boxWidth1}\n                        changeWidth={() => ({ x }) => changeAttractSetup({ ...attractSetup, boxWidth1: x })}\n                        height={attractSetup.boxHeight1}\n                        changeHeight={() => ({ x }) => changeAttractSetup({ ...attractSetup, boxHeight1: x })}\n                        maxWidth={attractSetup.boxWidth2}\n                        changeMaxWidth={() => ({ x }) => changeAttractSetup({ ...attractSetup, boxWidth2: x })}\n                        maxHeight={attractSetup.boxHeight2}\n                        changeMaxHeight={() => ({ x }) => changeAttractSetup({ ...attractSetup, boxHeight2: x })} />}\n            </div>\n            <div style={columnStyle}>\n                <div style={titleStyle}>\n                    Predator\n                </div>\n                <LabelSlider\n                    label='Min Radius' value={predator.radius1}\n                    min={0} max={500} step={5}\n                    onChange={() => ({ x }) => changePredator({ ...predator, radius1: x })}\n                />\n                <LabelSlider\n                    label='Max Radius' value={predator.radius2}\n                    min={0} max={500} step={5}\n                    onChange={() => ({ x }) => changePredator({ ...predator, radius2: x })}\n                />\n                <LabelSlider\n                    label='Panic Time' value={predator.panicTime.toFixed(1)}\n                    min={0} max={20} step={0.1}\n                    onChange={() => ({ x }) => changePredator({ ...predator, panicTime: x })}\n                />\n                <LabelSwitch\n                    label='Color panic' value={predator.colorPanic}\n                    onChange={() => x => changePredator({ ...predator, colorPanic: x })}\n                />\n            </div>\n        </div>\n    </div>\n}\n\nexport default FlockSimulation","import React from 'react'\n\nconst Footer = () => {\n\n    const style = {\n        textAlign: 'right'\n    }\n\n    return <div style={style}>\n        <p>Copyright (c) Jussi Enroos 2019<br />\n        <a href='https://github.com/McDevon/flocking-simulation'>Source</a> with MIT license</p>\n    </div>\n}\n\nexport default Footer","import React, { useEffect } from 'react'\nimport FlockSimulation from './components/FlockSimulation'\nimport Footer from './components/Footer'\n\nconst App = props => {\n  const divStyle = {\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    maxWidth: '900px'\n}\n\n  useEffect(() => {\n    console.log('app effect')\n  })\n\n  return (\n    <div style={divStyle}>\n      <FlockSimulation />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}